{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","query","setQuery","foundMovie","setFoundMovie","isMovieNotFound","setIsMovieNotFound","isMovieExists","React","useCallback","Boolean","find","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","placeholder","onClick","fetch","then","response","json","Error","Title","Plot","Poster","imdbID","disabled","App","data","setMovies","prevState","ReactDOM","render","document","getElementById"],"mappings":"+wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,OCJ3BG,G,MAAY,SAAC,GAA0B,IAAxBL,EAAuB,EAAvBA,OAAQM,EAAe,EAAfA,SAAe,EACvBC,mBAAS,IADc,mBAC1CC,EAD0C,KACnCC,EADmC,OAEbF,mBAAS,MAFI,mBAE1CG,EAF0C,KAE9BC,EAF8B,OAGHJ,mBAAS,MAHN,mBAG1CK,EAH0C,KAGzBC,EAHyB,KA2C3CC,EAAgBC,IAAMC,aAAY,WACtC,OAAKN,GAIEO,QAAQjB,EAAOkB,MAAK,SAAAhB,GAAK,OAAIA,EAAME,SAAWM,EAAWN,aAC/D,CAACJ,EAAQU,IAEZ,OACE,oCACE,0BACEf,UAAU,aACVwB,SA5Ce,SAACC,GACpBA,EAAMC,iBAENf,EAASI,GACTG,EAAmB,MACnBF,EAAc,QAyCV,yBAAKhB,UAAU,SACb,2BAAOA,UAAU,QAAQ2B,QAAQ,eAAjC,eAIA,yBAAK3B,UAAU,WACb,2BACE4B,KAAK,OACLC,GAAG,cACHC,MAAOjB,EACPkB,SA9DW,SAACN,GACtBX,EAASW,EAAMO,OAAOF,OACtBZ,EAAmB,MACnBF,EAAc,OA4DJiB,YAAY,0BACZjC,UAAU,qBAIbiB,GACC,uBAAGjB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE4B,KAAK,SACL5B,UAAU,kBACVkC,QAlEM,WACXrB,GAILsB,MAAM,8CAAD,OAA+CtB,IACjDuB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAC7B,GACDA,EAAMgC,MACRrB,GAAmB,IAEnBF,EAAc,2BACTT,GADQ,IAEXX,MAAOW,EAAMiC,MACb3C,YAAaU,EAAMkC,KACnB3C,OAAQS,EAAMmC,OACd3C,QAAQ,8BAAD,OAAgCQ,EAAMoC,QAC7ClC,OAAQF,EAAMoC,UAEhB7B,EAAS,UA4CP,iBASF,yBAAKd,UAAU,WACb,4BACE4B,KAAK,SACL5B,UAAU,oBACV4C,SAAUzB,KAHZ,mBAOA,uBAAGnB,UAAU,kBACVe,GAAcI,IACX,kCACA,QAOVF,GAAmBF,GACrB,yBAAKf,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAce,O,OCjHV8B,EAAM,WAAO,IAAD,EACKjC,mBAASkC,GADd,mBAChBzC,EADgB,KACR0C,EADQ,KAUvB,OACE,yBAAK/C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWK,OAAQA,EAAQM,SAbhB,SAACJ,GAChBwC,GAAU,SAAAC,GAAS,4BACdA,GADc,CAEjBzC,aCPN0C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f45ff1b4.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ movies, addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [isMovieNotFound, setIsMovieNotFound] = useState(null);\n\n  const handleOnChange = (event) => {\n    setQuery(event.target.value);\n    setIsMovieNotFound(null);\n    setFoundMovie(null);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    addMovie(foundMovie);\n    setIsMovieNotFound(null);\n    setFoundMovie(null);\n  };\n\n  const findMovie = () => {\n    if (!query) {\n      return;\n    }\n\n    fetch(`https://www.omdbapi.com/?apikey=29c92b6c&t=${query}`)\n      .then(response => response.json())\n      .then((movie) => {\n        if (movie.Error) {\n          setIsMovieNotFound(true);\n        } else {\n          setFoundMovie({\n            ...movie,\n            title: movie.Title,\n            description: movie.Plot,\n            imgUrl: movie.Poster,\n            imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n            imdbId: movie.imdbID,\n          });\n          setQuery('');\n        }\n      });\n  };\n\n  const isMovieExists = React.useCallback(() => {\n    if (!foundMovie) {\n      return true;\n    }\n\n    return Boolean(movies.find(movie => movie.imdbId === foundMovie.imdbId));\n  }, [movies, foundMovie]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={query}\n              onChange={handleOnChange}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n            />\n          </div>\n\n          {isMovieNotFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={isMovieExists()}\n            >\n              Add to the list\n            </button>\n            <p className=\"help is-danger\">\n              {foundMovie && isMovieExists()\n                ? 'You can`t add an existent movie'\n                : ''\n              }\n            </p>\n          </div>\n        </div>\n      </form>\n\n      {!isMovieNotFound && foundMovie && (\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...foundMovie} />\n      </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n      Title: PropTypes.string.isRequired,\n      Plot: PropTypes.string.isRequired,\n      Poster: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movie) => {\n    setMovies(prevState => ([\n      ...prevState,\n      movie,\n    ]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}